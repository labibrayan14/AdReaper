name: Auto Update Chromium Build

on:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight every day
  workflow_dispatch: # Add this line to enable manual triggering

jobs:
  update-chromium:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3

      - name: Delete everything except .github and config
        run: |
          shopt -s extglob
          rm -rf !(.github|config|.gitattributes)

      - name: Commit cleanup
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add -A
          git commit -m "Clean up repository for fresh Chromium update" || echo "No changes to commit"

      - name: Pull latest changes
        run: git pull --no-rebase origin main

      - name: Commit cleanup push
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git push

      - name: Clone Chromium repo
        run: git clone https://github.com/uBlockOrigin/uBOL-home.git temp

      - name: Move Chromium files to root
        run: |
          rsync -av temp/chromium/* ./
          rm -rf temp

      - name: Replace README.md with config version
        run: cp config/README.md ./README.md

      - name: Run Rebranding.py
        run: python3 config/Rebranding.py

      - name: Run injector.py
        run: python3 config/injector.py

      - name: Delete existing release and tag if exists
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete latest -y || echo "No existing release to delete"
          git push --delete origin latest || echo "No existing tag to delete"
      - name: print working directory
        run: pwd

      - name: Create Private Key File
        run: echo "${{ secrets.PRIVATE_KEY }}" > key.pem
        
      - name: Copy all file to a new folder for packing
        run: |
          mkdir packingDir
          rsync -av --exclude='.github' --exclude='config' --exclude='key.pem'  ./ ./packingDir/
        
        
      - name: Install Google Chrome for Packing
        run: |
          sudo apt update
          sudo apt install -y wget unzip xvfb libxss1 libappindicator3-1 libasound2t64
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      # Step 4: Pack the Chrome Extension
      - name: Pack the Chrome Extension
        run: |
          google-chrome --pack-extension=./packingDir/ --pack-extension-key=key.pem
      - name: Rename CRX Output
        run: |
          mv packingDir.crx chromium-build.crx || mv *.crx chromium-build.crx

      - name: CleanUp
        run: |
          rm packingDir
          rm key.pem

      - name: Create GitHub Release and upload zip
        uses: softprops/action-gh-release@v1
        with:
          name: "Chromium Auto Build"
          tag_name: "chromium-build"
          files: chromium-build.crx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit final state
        run: |
          git add -A
          git commit -m "Final update after Chromium processing" || echo "No changes to commit"
          git push
